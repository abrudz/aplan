:NameSpace Tac

∇ r←explain train
     ⎕FIX'file://Safe.dyalog'
     ns ← ⎕NS''
     p∆f←'+-×÷⌈⌊*⍟|!○~∨∧⍱⍲<≤=≥>≠≡≢⍴,⍪⍳↑↓?⍒⍋⍉⌽⊖∊⊥⊤⍎⍕⌹⊂⊃∪∩⍷⌷⊆⊢⊣⍸'
     s∆f←'/⌿\⍀'
     m∆o←'/⌿\⍀¨&⌶⌸'
     d∆o←'.@∘⍛⍣⍥⍠⍤⌺'

     Name←(' ',,∘' '),∘(⍕⎕UCS)

     (p∆n s∆n m∆n d∆n)←'∆∆⍙⍙'Name¨¨p∆f s∆f m∆o d∆o

     ns.∆ZLIDE←'⍬'⍨
     ns.∆RANK  ← {⍺←⊢ ⋄ f←⍺ ⋄ c ← (,'⊢')≢⎕cr'f' ⋄ Pad (⍕⍺),(Pad(Dfn Drop(c⍴'⍺')⍺⍺'⍵'),'⍤',⍕⍵⍵),⍵}
     ns.∆OUTER ← {⍺←⊢ ⋄ Pad (⍕⍺),(⍺⍺,'.',(Dfn Drop '⍺' ⍵⍵ '⍵')),⍵}

     ns.Drop←{0=×/⍴r←⊃↓/1 ¯1,⊂⍵:⍵ ⋄ r}

     _Lit←⍠'Regex' 0
     Zilde←('⍬'⎕R(' ∆ZLIDE ')_Lit)          ⍝ ⍬
     Slash←((,d∆o∘.,s∆f)⎕R(,d∆o∘.,s∆n)_Lit) ⍝ @/
     Rank←(('⍤',¨⎕D)⎕R(' ∆RANK '∘,¨⎕D)_Lit) ⍝ ⍤X
     Outer ← ('∘.'⎕R(' ''∘'' ∆OUTER ')_Lit) ⍝ ∘.


     _Assign_←{⍎'ns.',⍺,⍺⍺,⍵,⍵⍵}
     ns.Pad←'(',,∘')'
     ns.Dfn←'{',,∘'}'
     (p∆n,s∆n)('←{⍺←{⍵ ⋄ ⍺⍺} ⋄ (Pad⍣(⍬≢⍵)) (⍕⍺),'''_Assign_''',(⍕⍵) }')¨p∆f,s∆f

     m∆n('←{⍺←⊢ ⋄ Pad (⍕⍺),(⍕⍺⍺,⍬),'''_Assign_''',        (⍕⍵)}')¨m∆o
     d∆n('←{⍺←⊢ ⋄ Pad (⍕⍺),(⍕⍺⍺,⍬),'''_Assign_''',(⍕⍵⍵,⍬),(⍕⍵)}')¨d∆o


     ns.⍙168 ←{⍺←⊢ ⋄ Pad ⍺,('¨',⍨Dfn Drop'⍺'(⍺⍺)'⍵'),⍵}
     ns.⍙9016←{⍺←⊢ ⋄ Pad ⍺,('⌸',⍨Dfn Drop'⍺'(⍺⍺)'⍵'),⍵}

     ns.∆8866←{⍺←⍵ ⋄ ⍵≡⍬:(⍕⍺),'⊢',(⍕⍵) ⋄ ⍺⊢⍥⍕⍵}
     ns.∆8867←{⍺←⍵ ⋄ ⍵≡⍬:(⍕⍺),'⊣',(⍕⍵) ⋄ ⍺⊣⍥⍕⍵}

     ns.⍙9051←{⍺←⍵ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍛',(⍕⍵⍵,⍬) ⋄ ⍵ ⍵⍵⍨⍺⍺ ⍺}
     ns.⍙9064←{⍺←⍵ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍨'         ⋄ ⍵(⍕⍺⍺⊣⊢)⍺}
     ns.⍙9061←{⍺←⊢ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍥',(⍕⍵⍵,⍬) ⋄ ⍺(⍺⍺⍥⍵⍵)⍵}
     ns.⍙8728←{⍺←⊢ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'∘',(⍕⍵⍵,⍬) ⋄ ⍺(⍺⍺∘⍵⍵)⍵}
     ns.⍙9060←{⍺←⊢ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍤',(⍕⍵⍵,⍬) ⋄ ⍺(⍺⍺⍤⍵⍵)⍵}

     train ← (('''[^'']+''',⍥⊆' *\'∘,¨p∆f,m∆o,d∆o)⎕R('&',p∆n,m∆n,d∆n))Outer Slash Zilde Rank train
     f ← {⊂ns.Dfn ns.Drop⍵}
     
    :Trap 0
        r←(f ns Safe.Exec '(',train,')''⍵''' ),⍥⊆{0::'N/A' ⋄ f ns Safe.Exec '''⍺''(',train,')''⍵'''}''
    :Case 6
        r←'Error' ,⍥⊆ 'Shy'
    :Case 10
        r←'Error' ,⍥⊆ 'EXPRESSION TIME LIMIT EXCEEDED: Must complete within 5 seconds'
    :Case 11
        r←'Error' ,⍥⊆ 'Illegal Token'
    :Else
        r←'Error' ,⍥⊆ ⎕DMX.(Message{⍵,⍺,⍨': '/⍨×≢⍺}⎕EM 200|EN-200)
    :EndTrap
 ∇

 :EndNameSpace

