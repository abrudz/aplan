∇ r←pretty explain train
 :With ⎕NS''

     train ← '''' {⍵/⍨3 1⌷⍨⊂⍵⍳⍨,⍺} train

     _Lit  ← ⍠'Regex' 0
     train ← ('⍬'⎕R(' ''⍬'' ')_Lit)train  ⍝ ⍬

     train ← ('(?i)⎕A'⎕R(' ''⎕A'' ')⍠'Regex'(1 0))train ⍝ ⎕A
     train ← ('(?i)⎕D'⎕R(' ''⎕D'' ')⍠'Regex'(1 0))train ⍝ ⎕D

     p∆f ← '+-×÷⌈⌊*⍟|!○~∨∧⍱⍲<≤=≥>≠≡≢⍴,⍪⍳↑↓?⍒⍋⍉⌽⊖∊⊥⊤⍎⍕⌹⊂⊃∪∩⍷⌷⊆⊢⊣⍸'
     s∆f ← '/⌿\⍀'
     m∆o ← '/⌿\⍀¨⍨&⌶⌸'
     d∆o ← '.⍛∘⍤⍥⍣⍠⌺@'

     op   ← 4
     dfn  ← 3.2
     trad ← 3.1
     fn   ← 3
     arr  ← 2

     ∆v   ← 900⌶
     ∆xr  ← 183⌶

     :Trap 0 ⋄ q ← ⍎train ⋄ :EndTrap

     Name   ← (' ',,∘' '),∘(⍕⎕UCS)
     Parens ← {0=≡⍵:⍕⍵⋄'(',(∇¨⍵),')'}

     Drop   ← {0=×/⍴r←⊃↓/1 ¯1,⊂⍵ : ⍵ ⋄ '()'≡(⊣/,⊢/)⍵ : r ⋄ ⍵}

     train ← ⍕Parens (⎕nr 'q') {
       ⍺ (0∧.≠,)⍥≡ ⍵ : ⍺∇¨⍵
       ~⊃⍺∊'/⌿\⍀'    : ⍺
       ⊃op=⍵ : '⍙' Name ⍺
               '∆' Name ⍺
      } ∆xr 'q'

      train ← '''' {⍵/⍨3 1⌷⍨⊂⍵⍳⍨,⍺} train

     _Src ← {62⎕atx'⍺⍺'⋄⍺⍺}
     _Nc  ← {42⎕atx'⍺⍺'⋄⍺⍺}
     _Tc  ← {40⎕atx'⍺⍺'⋄⍺⍺}

     _Op ← {
        nc  ← ⍺⍺_Nc  ⍬
        src ← ⍺⍺_Src ⍬
        (trad=nc)∨fn≠⍺⍺_Tc ⍬ : ⍕⍺⍺,⍬
        dfn=nc : ⊃src

        Dfn Drop (⍺⍴'⍺')(⍺⍺)'⍵'
       }

     ∆ZILDE ← '⍬'⍨
     train ← ('⍬'⎕R(' ∆ZILDE ')_Lit)train ⍝ ⍬

     ⎕fx 'r←∆A' 'r←''⎕A'''
     ⎕fx 'r←∆D' 'r←''⎕D'''

     train ← ('⎕A'⎕R(' ∆A ')_Lit)train ⍝ ⎕A
     train ← ('⎕D'⎕R(' ∆D ')_Lit)train ⍝ ⎕D

     ∆OUTER ← {⍺←⊢ ⋄ f←⍺ ⋄ (,'⊢')≡⎕cr'f': ∘.×'' ⋄ Pad (⍕⍺),(Pad ⍺⍺,'.',1 ⍵⍵_Op ⍬),⍵}
     train ← ('∘.'⎕R(' ''∘'' ∆OUTER ')_Lit)train ⍝ ∘.

     (p∆n s∆n m∆n d∆n)←'∆∆⍙⍙'Name¨¨p∆f s∆f m∆o d∆o

     _Assign_ ← {⍎⍺,⍺⍺,⍵,⍵⍵}
     Dfn ← '{',,∘'}'
     Pad ← '(',,∘')'
     (p∆n,s∆n){⎕fx ('r←{x}',⍺,'y')(':If ∆v⍬ ⋄ x ← {⍵ ⋄ ⍺⍺} ⋄ :EndIf ⋄ r←(Pad⍣(⍬≢y)) (⍕x),''',⍵,''',⍕y')}¨p∆f,s∆f

     m∆n('←{⍺←⊢ ⋄ Pad (⍕⍺),(Pad (⍺⍺_Op⍨1),'''_Assign_'''),          (⍕⍵)}')¨m∆o
     d∆n('←{⍺←⊢ ⋄ Pad (⍕⍺),(Pad (⍺⍺_Op⍨1),'''_Assign_''',(⍵⍵_Op⍨1)),(⍕⍵)}')¨d∆o

     ⎕fx 'r ← {x} ∆8866 y' ':If ∆v⍬ ⋄ x ← y ⋄ :EndIf ⋄ :If y≡⍬ ⋄r←(⍕x),''⊢'',(⍕y)⋄:Else ⋄ r←x⊢⍥⍕y ⋄ :EndIf'
     ⎕fx 'r ← {x} ∆8867 y' ':If ∆v⍬ ⋄ x ← y ⋄ :EndIf ⋄ :If y≡⍬ ⋄r←(⍕x),''⊣'',(⍕y)⋄:Else ⋄ r←x⊣⍥⍕y ⋄ :EndIf'


     ⍙46←{
        ⍺←⊢⋄f←⍺
        (⍺⍺_Tc ⍬) (arr ∨.= ,)⍵⍵_Tc ⍬: (⍕⍺⍺),'.',(⍕⍵⍵)
        Pad (⍕⍺),(Pad (⍺⍺_Op⍨1),'.',(⍵⍵_Op⍨1)),(⍕⍵)
       }


     ⍙9060←{
        ⍺←⊢⋄f←⍺
        arr=⍵⍵_Tc ⍬: Pad (⍕⍺),(Pad (⍵ ⍺⍺_Op⍨ (,'⊢')≢⎕cr'f'),'⍤',⍕⍵⍵),(⍕⍵)
        ⍵≡⍬:(⍕⍺⍺,⍬),'⍤',(⍕⍵⍵,⍬)
        ⍺(⍺⍺⍤⍵⍵)⍵
       }

     ⍙9051←{⍺←⍵ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍛',(⍕⍵⍵,⍬) ⋄ ⍵ ⍵⍵⍨⍺⍺ ⍺}
     ⍙9064←{⍺←⍵ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍨'         ⋄ ⍵(⍕⍺⍺⊣⊢)⍺}
     ⍙9061←{⍺←⊢ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'⍥',(⍕⍵⍵,⍬) ⋄ ⍺(⍺⍺⍥⍵⍵)⍵}
     ⍙8728←{⍺←⊢ ⋄ ⍵≡⍬:(⍕⍺⍺,⍬),'∘',(⍕⍵⍵,⍬) ⋄ ⍺(⍺⍺∘⍵⍵)⍵}

     c∆n ← '∆ZILDE' '''∘''∆OUTER' '⍙9060' '⍙9051' '⍙9064' '⍙9061' '⍙8728'
     c∆o ← '⍬' '∘.' '⍤' '⍛' '⍨' '⍥' '∘'

     train ← (('''[^'']+''' ,⍥⊆ ' *\'∘,¨p∆f,m∆o,d∆o)⎕R('&',p∆n,m∆n,d∆n))train
    :Trap 0
        o← ({⍵,'Y'}⍣pretty) Dfn Drop (tr ← ⍎train)'⍵'
        :If fn≠tr _Tc ⍬ ⋄ o ← 'SYNTAX ERROR' ⋄ :EndIf

        o←⊂((c∆n,{'\s?',(⊃↓/1 ¯1,⊂⍵),'\s?'}¨ p∆n,m∆n,d∆n)⎕R(,¨c∆o,p∆f,m∆o,d∆o)⍠'Regex'(1 0))⍕o
    :Else
        o←⎕DMX.(Message{⍵,⍺,⍨': '/⍨×≢⍺}⎕EM EN)
    :EndTrap

    :Trap 0
        p← ({'X',⍵,'Y'}⍣pretty) Dfn Drop '⍺'(tr ← ⍎train)'⍵'
        :If fn≠tr _Tc ⍬ ⋄ p ← 'SYNTAX ERROR' ⋄ :EndIf

        p←⊂((c∆n,{'\s?',(⊃↓/1 ¯1,⊂⍵),'\s?'}¨ p∆n,m∆n,d∆n)⎕R(,¨c∆o,p∆f,m∆o,d∆o)⍠'Regex'(1 0))⍕p
    :Else
        p←⎕DMX.(Message{⍵,⍺,⍨': '/⍨×≢⍺}⎕EM EN)
    :EndTrap

    r ← ⎕JSON o,⍥⊆ p

 :EndWith
∇
